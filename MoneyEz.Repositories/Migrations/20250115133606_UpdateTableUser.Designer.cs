// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyEz.Repositories.Entities;

#nullable disable

namespace MoneyEz.Repositories.Migrations
{
    [DbContext(typeof(MoneyEzContext))]
    [Migration("20250115133606_UpdateTableUser")]
    partial class UpdateTableUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoneyEz.Repositories.Entities.BudgetModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTemplate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PeriodUnit")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodValue")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__BudgetMo__3214EC076C0E3585");

                    b.HasIndex("GroupId");

                    b.ToTable("BudgetModels");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.BudgetModelsSubcategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BudgetModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__BudgetMo__3214EC0752210DD5");

                    b.HasIndex("BudgetModelId");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("BudgetModelsSubcategory", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Categori__3214EC076C8E8AF7");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.CategoryBudgetModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BudgetAmount")
                        .HasColumnType("int");

                    b.Property<Guid?>("BudgetModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC07B20984CB");

                    b.HasIndex("BudgetModelId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryBudgetModels");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.ChatHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConservationName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoomNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__ChatHist__3214EC07F429B993");

                    b.HasIndex("UserId");

                    b.ToTable("ChatHistory", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChatHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__ChatMess__3214EC07F429B993");

                    b.HasIndex("ChatHistoryId");

                    b.ToTable("ChatMessage", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.FixedTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PeriodUnit")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodValue")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__FixedTra__3214EC070489ACAE");

                    b.HasIndex("SubcategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("FixedTransaction", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPersonal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubscriptionPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SubscriptionStatus")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Groups__3214EC078F1FD4AF");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Image", b =>
                {
                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasIndex("EntityId");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.InquiryReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ReportType")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__InquiryR__3214EC074754794F");

                    b.ToTable("InquiryReports");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC07ED702C28");

                    b.HasIndex("UserId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3214EC0757225F8B");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.PlanSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SettingKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SettingValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__PlanSett__3214EC0712224E4A");

                    b.HasIndex(new[] { "SettingKey" }, "UQ__PlanSett__01E719ADCCE98150")
                        .IsUnique();

                    b.ToTable("PlanSetting", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Post__3214EC07A4C72A8A");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Question__3214EC07700B5FF1");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subcategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Subcateg__3214EC0753424064");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategories");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Subscrip__3214EC07D5942C0F");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscription", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.SubscriptionPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Subscrip__3214EC07BEFF8939");

                    b.ToTable("SubscriptionPlan", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Target", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Goal")
                        .HasColumnType("int");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Target__3214EC07EB826DA4");

                    b.HasIndex("GroupId");

                    b.ToTable("Target", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Transact__3214EC07568FEEEB");

                    b.HasIndex("GroupId");

                    b.HasIndex("SubcategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UnsignFullName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC076F06BC40");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534501273D3")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.UserGroup", b =>
                {
                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("RoleGroup")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.UserSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SettingKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SettingValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__UserSett__3214EC0738361D04");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "SettingKey" }, "UQ__UserSett__01E719AD1D4FE8C8")
                        .IsUnique();

                    b.ToTable("UserSetting", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.BudgetModel", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Group", "Group")
                        .WithMany("BudgetModels")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_BudgetModels_Group");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.BudgetModelsSubcategory", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.BudgetModel", "BudgetModel")
                        .WithMany("BudgetModelsSubcategories")
                        .HasForeignKey("BudgetModelId")
                        .HasConstraintName("FK_BudgetModelsSubcategory_BudgetModel");

                    b.HasOne("MoneyEz.Repositories.Entities.Subcategory", "Subcategory")
                        .WithMany("BudgetModelsSubcategories")
                        .HasForeignKey("SubcategoryId")
                        .HasConstraintName("FK_BudgetModelsSubcategory_Subcategory");

                    b.Navigation("BudgetModel");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.CategoryBudgetModel", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.BudgetModel", "BudgetModel")
                        .WithMany("CategoryBudgetModels")
                        .HasForeignKey("BudgetModelId")
                        .HasConstraintName("FK_CategoryBudgetModels_BudgetModel");

                    b.HasOne("MoneyEz.Repositories.Entities.Category", "Category")
                        .WithMany("CategoryBudgetModels")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_CategoryBudgetModels_Category");

                    b.Navigation("BudgetModel");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.ChatHistory", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("ChatHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ChatHistory_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.ChatMessage", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.ChatHistory", "ChatHistory")
                        .WithMany("ChatMessages")
                        .HasForeignKey("ChatHistoryId")
                        .HasConstraintName("FK_ChatMessage_ChatHistory");

                    b.Navigation("ChatHistory");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.FixedTransaction", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Subcategory", "Subcategory")
                        .WithMany("FixedTransactions")
                        .HasForeignKey("SubcategoryId")
                        .HasConstraintName("FK_FixedTransaction_Subcategory");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("FixedTransactions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_FixedTransaction_User");

                    b.Navigation("Subcategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Image", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Post", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .HasConstraintName("FK_Image_Entity_Post");

                    b.HasOne("MoneyEz.Repositories.Entities.Transaction", "EntityNavigation")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .HasConstraintName("FK_Image_Entity");

                    b.Navigation("Entity");

                    b.Navigation("EntityNavigation");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Notification", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Notification_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Payment", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Subscription", "Subscription")
                        .WithMany("Payments")
                        .HasForeignKey("SubscriptionId")
                        .HasConstraintName("FK_Payment_Subscription");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subcategory", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Subcategories_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subscription", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.SubscriptionPlan", "Plan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlanId")
                        .HasConstraintName("FK_Subscription_Plan");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Subscription_User");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Target", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Group", "Group")
                        .WithMany("Targets")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Target_Group");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Transaction", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Group", "Group")
                        .WithMany("Transactions")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Transaction_Group");

                    b.HasOne("MoneyEz.Repositories.Entities.Subcategory", "Subcategory")
                        .WithMany("Transactions")
                        .HasForeignKey("SubcategoryId")
                        .HasConstraintName("FK_Transaction_Subcategory");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Transaction_User");

                    b.Navigation("Group");

                    b.Navigation("Subcategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.UserGroup", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_UserGroups_Group");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserGroups_User");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.UserSetting", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("UserSettings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserSetting_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.BudgetModel", b =>
                {
                    b.Navigation("BudgetModelsSubcategories");

                    b.Navigation("CategoryBudgetModels");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Category", b =>
                {
                    b.Navigation("CategoryBudgetModels");

                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.ChatHistory", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Group", b =>
                {
                    b.Navigation("BudgetModels");

                    b.Navigation("Targets");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subcategory", b =>
                {
                    b.Navigation("BudgetModelsSubcategories");

                    b.Navigation("FixedTransactions");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subscription", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.SubscriptionPlan", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.User", b =>
                {
                    b.Navigation("ChatHistories");

                    b.Navigation("FixedTransactions");

                    b.Navigation("Notifications");

                    b.Navigation("Subscriptions");

                    b.Navigation("Transactions");

                    b.Navigation("UserSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
