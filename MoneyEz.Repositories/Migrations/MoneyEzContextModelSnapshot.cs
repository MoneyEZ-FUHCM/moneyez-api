// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyEz.Repositories.Entities;

#nullable disable

namespace MoneyEz.Repositories.Migrations
{
    [DbContext(typeof(MoneyEzContext))]
    partial class MoneyEzContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AcquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepreciationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DisposalDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameUnsign")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OwnershipType")
                        .HasColumnType("int");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RevaluationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Asset__3214EC07");

                    b.HasIndex("UserId");

                    b.ToTable("Asset", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountHolderName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BankShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__BankAccount__3214EC07");

                    b.HasIndex("UserId");

                    b.ToTable("BankAccount", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameUnsign")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC077A9D3824");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.CategorySubcategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__CategorySubcategory");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("CategorySubcategory", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.ChatHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intent")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IntentUnsign")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RoomNo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__ChatHist__3214EC0718207CD7");

                    b.HasIndex("UserId");

                    b.ToTable("ChatHistory", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChatHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__ChatMess__3214EC07066FC8D5");

                    b.HasIndex("ChatHistoryId");

                    b.ToTable("ChatMessage", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.FinancialGoal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameUnsign")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TargetAmount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Financia__3214EC07E477B7DE");

                    b.HasIndex("GroupId");

                    b.HasIndex("SubcategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("FinancialGoal", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.FinancialReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameUnsign")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("NetBalance")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<int?>("ReportType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalExpense")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<decimal>("TotalIncome")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Financia__3214EC07A6D22F10");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("FinancialReport", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.GroupFund", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountBankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameUnsign")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Visibility")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__GroupFun__3214EC076CA655A0");

                    b.ToTable("GroupFund", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.GroupFundLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Action")
                        .HasColumnType("int");

                    b.Property<string>("ChangeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__GroupFun__3214EC0764B86785");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupFundLog", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.GroupMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ContributionPercentage")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__GroupMem__3214EC07B6FBBF40");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupMember", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.GroupMemberLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChangeDiscription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ChangeType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupMemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__GroupMem__3214EC0785A93823");

                    b.HasIndex("GroupMemberId");

                    b.ToTable("GroupMemberLog", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_Image");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Liability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InterestPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("InterestRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameUnsign")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OwnershipType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecognitionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Liability__3214EC07");

                    b.HasIndex("UserId");

                    b.ToTable("Liability", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Href")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TitleUnsign")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC07F0870137");

                    b.HasIndex("UserId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3214EC07E8CB354B");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.PlanSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PlanSettingKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PlanSettingValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubscriptionPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__PlanSett__3214EC073F36C751");

                    b.HasIndex("SubscriptionPlanId");

                    b.HasIndex(new[] { "PlanSettingKey" }, "UQ__PlanSett__2C9042B1C79BCF76")
                        .IsUnique()
                        .HasFilter("[PlanSettingKey] IS NOT NULL");

                    b.ToTable("PlanSetting", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Quiz", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SpendingModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Quiz__3214EC07459B7BE7");

                    b.ToTable("Quiz", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.QuizAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnswerContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__QuizAnsw__3214EC07BF3B8EBD");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuizAnswer", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.QuizQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("QuizId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuizTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuizTitleUnsign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__QuizQues__3214EC07F5493FC0");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizQuestion", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.QuizSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__QuizSett__3214EC07C96E3E6F");

                    b.ToTable("QuizSetting", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.RecurringTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("FrequencyType")
                        .HasColumnType("int");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Recurrin__3214EC075D4218D9");

                    b.HasIndex("SubcategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("RecurringTransaction", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.SpendingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTemplate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameUnsign")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Spending__3214EC0701F304D5");

                    b.ToTable("SpendingModel", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.SpendingModelCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PercentageAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<Guid?>("SpendingModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Spending__3214EC07BAE87349");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SpendingModelId");

                    b.ToTable("SpendingModelCategory", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subcategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameUnsign")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Subcateg__3214EC0789F0B717");

                    b.ToTable("Subcategory", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubscriptionPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Subscrip__3214EC079370CD87");

                    b.HasIndex("SubscriptionPlanId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscription", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.SubscriptionPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Subscrip__3214EC07C2EDB1BA");

                    b.ToTable("SubscriptionPlan", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<bool?>("ApprovalRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RequestCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserSpendingModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Transact__3214EC07AC448F93");

                    b.HasIndex("GroupId");

                    b.HasIndex("SubcategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.TransactionVote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Vote")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__Transact__3214EC0761B10826");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionVote", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("GoogleId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("NameUnsign")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC07E3373E1E");

                    b.HasIndex(new[] { "PhoneNumber" }, "UQ__User__85FB4E38A29A5523")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D10534F6DE8EA9")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.UserQuizResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QuizData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("QuizId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__UserQuiz__3214EC07650B7C4B");

                    b.HasIndex("QuizId");

                    b.HasIndex("UserId");

                    b.ToTable("UserQuizResult", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.UserSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserSettingKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserSettingValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__UserSett__3214EC0752B59B0B");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "UserSettingKey" }, "UQ__UserSett__DEE0F037A031DEF3")
                        .IsUnique()
                        .HasFilter("[UserSettingKey] IS NOT NULL");

                    b.ToTable("UserSetting", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.UserSpendingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PeriodUnit")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodValue")
                        .HasColumnType("int");

                    b.Property<Guid?>("SpendingModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__UserSpen__3214EC07E1F1D1C6");

                    b.HasIndex("SpendingModelId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSpendingModel", (string)null);
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Asset", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("Assets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Asset__UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.BankAccount", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("BankAccounts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__BankAccount__UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.CategorySubcategory", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Category", "Category")
                        .WithMany("CategorySubcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyEz.Repositories.Entities.Subcategory", "Subcategory")
                        .WithMany("CategorySubcategories")
                        .HasForeignKey("SubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.ChatHistory", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("ChatHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ChatHisto__UserI__0B91BA14");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.ChatMessage", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.ChatHistory", "ChatHistory")
                        .WithMany("ChatMessages")
                        .HasForeignKey("ChatHistoryId")
                        .HasConstraintName("FK__ChatMessa__ChatH__0A9D95DB");

                    b.Navigation("ChatHistory");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.FinancialGoal", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.GroupFund", "Group")
                        .WithMany("FinancialGoals")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__Financial__Group__7D439ABD");

                    b.HasOne("MoneyEz.Repositories.Entities.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Financial__Subcategory__8A4B4B5C");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("FinancialGoals")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Financial__UserI__7E37BEF6");

                    b.Navigation("Group");

                    b.Navigation("Subcategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.FinancialReport", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.GroupFund", "GroupFund")
                        .WithMany("FinancialReports")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__FinancialReport__GroupFundId");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("FinancialReports")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__FinancialReport__UserId");

                    b.Navigation("GroupFund");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.GroupFundLog", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.GroupFund", "Group")
                        .WithMany("GroupFundLogs")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__GroupFund__Group__75A278F5");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.GroupMember", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.GroupFund", "Group")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__GroupMemb__Group__76969D2E");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("GroupMembers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__GroupMemb__UserI__778AC167");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.GroupMemberLog", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.GroupMember", "GroupMember")
                        .WithMany("GroupMemberLogs")
                        .HasForeignKey("GroupMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__GroupMemb__Group__787EE5A0");

                    b.Navigation("GroupMember");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Liability", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("Liabilities")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Liability__UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Notification", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__UserI__03F0984C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Payment", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Subscription", "Subscription")
                        .WithMany("Payments")
                        .HasForeignKey("SubscriptionId")
                        .HasConstraintName("FK__Payment__Subscri__08B54D69");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.PlanSetting", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("PlanSettings")
                        .HasForeignKey("SubscriptionPlanId")
                        .HasConstraintName("FK__PlanSetti__Subsc__09A971A2");

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.QuizAnswer", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.QuizQuestion", "Question")
                        .WithMany("QuizAnswers")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__QuizAnswe__Quest__0F624AF8");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.QuizQuestion", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Quiz", "Quiz")
                        .WithMany("QuizQuestions")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("FK__QuizQuest__QuizI__0E6E26BF");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.RecurringTransaction", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Subcategory", "Subcategory")
                        .WithMany("RecurringTransactions")
                        .HasForeignKey("SubcategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Recurring__Subca__04E4BC85");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("RecurringTransactions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Recurring__UserI__05D8E0BE");

                    b.Navigation("Subcategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.SpendingModelCategory", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Category", "Category")
                        .WithMany("SpendingModelCategories")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__SpendingM__Categ__01142BA1");

                    b.HasOne("MoneyEz.Repositories.Entities.SpendingModel", "SpendingModel")
                        .WithMany("SpendingModelCategories")
                        .HasForeignKey("SpendingModelId")
                        .HasConstraintName("FK__SpendingM__Spend__00200768");

                    b.Navigation("Category");

                    b.Navigation("SpendingModel");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subscription", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SubscriptionPlanId")
                        .HasConstraintName("FK__Subscript__Subsc__06CD04F7");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Subscript__UserI__07C12930");

                    b.Navigation("SubscriptionPlan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Transaction", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.GroupFund", "Group")
                        .WithMany("Transactions")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__Transacti__Group__797309D9");

                    b.HasOne("MoneyEz.Repositories.Entities.Subcategory", "Subcategory")
                        .WithMany("Transactions")
                        .HasForeignKey("SubcategoryId")
                        .HasConstraintName("FK__Transacti__Subca__7B5B524B");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Transacti__UserI__7A672E12");

                    b.Navigation("Group");

                    b.Navigation("Subcategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.TransactionVote", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Transaction", "Transaction")
                        .WithMany("TransactionVotes")
                        .HasForeignKey("TransactionId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacti__Trans__7C4F7684");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.UserQuizResult", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.Quiz", "Quiz")
                        .WithMany("UserQuizResults")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("FK__UserQuizR__QuizI__0D7A0286");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("UserQuizResults")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserQuizR__UserI__0C85DE4D");

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.UserSetting", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("UserSettings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserSetting__UserId__12345678");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.UserSpendingModel", b =>
                {
                    b.HasOne("MoneyEz.Repositories.Entities.SpendingModel", "SpendingModel")
                        .WithMany("UserSpendingModels")
                        .HasForeignKey("SpendingModelId")
                        .HasConstraintName("FK__UserSpend__Spend__02FC7413");

                    b.HasOne("MoneyEz.Repositories.Entities.User", "User")
                        .WithMany("UserSpendingModels")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserSpend__UserI__02084FDA");

                    b.Navigation("SpendingModel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Category", b =>
                {
                    b.Navigation("CategorySubcategories");

                    b.Navigation("SpendingModelCategories");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.ChatHistory", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.GroupFund", b =>
                {
                    b.Navigation("FinancialGoals");

                    b.Navigation("FinancialReports");

                    b.Navigation("GroupFundLogs");

                    b.Navigation("GroupMembers");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.GroupMember", b =>
                {
                    b.Navigation("GroupMemberLogs");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Quiz", b =>
                {
                    b.Navigation("QuizQuestions");

                    b.Navigation("UserQuizResults");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.QuizQuestion", b =>
                {
                    b.Navigation("QuizAnswers");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.SpendingModel", b =>
                {
                    b.Navigation("SpendingModelCategories");

                    b.Navigation("UserSpendingModels");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subcategory", b =>
                {
                    b.Navigation("CategorySubcategories");

                    b.Navigation("RecurringTransactions");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Subscription", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.SubscriptionPlan", b =>
                {
                    b.Navigation("PlanSettings");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.Transaction", b =>
                {
                    b.Navigation("TransactionVotes");
                });

            modelBuilder.Entity("MoneyEz.Repositories.Entities.User", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("BankAccounts");

                    b.Navigation("ChatHistories");

                    b.Navigation("FinancialGoals");

                    b.Navigation("FinancialReports");

                    b.Navigation("GroupMembers");

                    b.Navigation("Liabilities");

                    b.Navigation("Notifications");

                    b.Navigation("RecurringTransactions");

                    b.Navigation("Subscriptions");

                    b.Navigation("Transactions");

                    b.Navigation("UserQuizResults");

                    b.Navigation("UserSettings");

                    b.Navigation("UserSpendingModels");
                });
#pragma warning restore 612, 618
        }
    }
}
